{"version":3,"sources":["pages/intro.js","pages/video.js","pages/question.js","pages/conclusion.js","imgs/gt-seal.png","components/layout.js","App.js","index.js"],"names":["IntroScreen","state","id","Button","onClick","props","history","push","pathname","sessionID","Date","now","groupID","Math","round","random","progress","appearance","React","Component","VideoScreen","timerup","this","goBack","initialTime","location","startImmediately","direction","checkpoints","time","callback","setState","start","resume","pause","stop","reset","timerState","Fragment","url","getTimer","disabled","q1Rating","q1Timestamp","QuestionScreen","addResponse","a","apiUrl","rating","timestamp","fetch","method","headers","console","log","question_a","question_b","question","toLowerCase","class","Slider","defaultValue","min","step","max","graduated","renderMark","mark","onChange","val","ConclusionScreen","Layout","children","className","src","logo","alt","RouterSwitch","withRouter","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2754c0c.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button } from 'rsuite';\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nexport default class IntroScreen extends React.Component {\n    state = {}\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <h1 id=\"startTitle\">Introduction</h1>\n                    <div id=\"introContent\">\n                        <p>\n                            Welcome to our Cognitive Science study! This survey/study takes less than 10 minutes - it involves\n                            answering two questions and watching a short film in-between. You will need to complete all\n                            of them to finish. I hope you enjoy this time!\n                        </p>\n                        <br></br>\n                        <br></br>\n                        <p>\n                            Please click \"Begin\" to get started.\n                        </p>\n                    </div>\n\n                </div>\n                <div>\n                <Button id=\"StartEnd\" onClick={() => {\n                    this.props.history.push(\n                        {\n                            pathname: \"/question\",\n                            state: {\n                                sessionID: Date.now(),\n                                groupID: Math.round(Math.random())==0?'A':'B',\n                                progress: \"q1\"\n                            }\n                        }\n                    );}}\n                    appearance=\"subtle\">\n                        Begin\n                </Button>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\n// import {CSVLink, CSVDownload} from 'react-csv';\nimport { Button, Drawer, Icon } from 'rsuite';\nimport ReactPlayer from 'react-player';\nimport 'history';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Timer from \"react-compound-timer/build\";\n\n\nexport default class VideoScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timerup: false\n        }\n    }\n\n    componentDidMount() {\n    }\n\n    handleBack() {\n        this.props.history.goBack();\n    }\n\n    getTimer() {\n        return (\n            <Timer initialTime={this.props.location.state.groupID=='A'? 440000:510000}\n                    startImmediately={true}\n                    direction=\"backward\"\n                    checkpoints={[\n                        {\n                            time: 0,\n                            callback: () => {this.setState({timerup: true})},\n                        },\n                    ]}>\n                {({ start, resume, pause, stop, reset, timerState }) => (\n                    <React.Fragment>\n                        {/* <div>\n                            <Timer.Minutes /> minutes\n                            <Timer.Seconds /> seconds\n                        </div> */}\n                        <br />\n                    </React.Fragment>\n                )}\n            </Timer>\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 id=\"startTitle\">Watch Short Film</h1>\n                <ReactPlayer \n                    id=\"film\"\n                    url={this.props.location.state.groupID=='A'?'https://youtu.be/an6DRN4flZM':'https://youtu.be/QP3YywgRx5A'} \n                />\n                <p id=\"Content\">\n                    Please watch the short film below. You can move to the next step once you finish it. Enjoy!\n                </p>\n                {this.getTimer()}\n                <Button \n                    id=\"FilmNext\"\n                    disabled={!this.state.timerup}\n                    onClick={() => {\n                        this.props.history.push({pathname: this.props.location.state.progress == \"q2\" ? \"/question\" : \"/conclusion\",\n                                                state: {sessionID: this.props.location.state.sessionID,\n                                                        groupID: this.props.location.state.groupID,\n                                                        q1Rating: this.props.location.state.q1Rating,\n                                                        q1Timestamp: this.props.location.state.q1Timestamp,\n                                                        progress: this.props.location.state.progress}});\n                    }}\n                    appearance=\"subtle\">\n                    {\"Next\"}\n                </Button>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { Button, Slider } from 'rsuite';\nimport 'history';\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport Timer from \"react-compound-timer/build\";\n\n\nexport default class QuestionScreen extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rating: 5,\n            timestamp: Date.now()\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props.location.state);\n    }\n\n    handleBack() {\n        this.props.history.goBack();\n    }\n\n    addResponse = async () => {\n        try {\n            const apiUrl = \"/addResponse?sessionID=\" + this.props.location.state.sessionID\n                + \"&groupID=\" + this.props.location.state.groupID + \"&q1=\" + this.props.location.state.q1Rating \n                + \"&q1Timestamp=\" + this.props.location.state.q1Timestamp + \"&q2=\" + this.state.rating\n                + \"&q2Timestamp=\" + this.state.timestamp;\n            await fetch(\n                apiUrl, \n                {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }\n            );\n        } catch (error) {\n            console.log(error);\n            console.log(\"failed to add a student\");\n        }\n    }\n\n    render() {\n\n        var question_a = \"From 1 to 10, how likely do you think empathy and attachment can be established between human and machine/robot?\";\n        var question_b = \"From 1 to 10, how likely do you think that human subjective experiences can be digitized into data?\";\n        var question_2_prefix = \"Putting the film aside, \"\n        var question = ''\n\n        if (this.props.location.state.progress==\"q2\") {\n            question += question_2_prefix;\n            if (this.props.location.state.groupID=='A') {\n                question += question_a.toLowerCase();\n            } else {\n                question += question_b.toLowerCase();\n            }\n        } else {\n            if (this.props.location.state.groupID=='A') {\n                question += question_b;\n            } else {\n                question += question_a;\n            }\n        }\n\n        return (\n            <div>\n                <h1 id=\"startTitle\">Please Answer</h1>\n                <div id=\"Content\">\n                    <p>\n                        {question}\n                    </p>\n                </div>\n                <div class=\"slidecontainer\">\n                    <Slider\n                        class=\"slider\"\n                        defaultValue={5}\n                        min={1}\n                        step={1}\n                        max={10}\n                        graduated\n                        progress\n                        renderMark={mark => {\n                            return mark;\n                        }}\n                        onChange={val => {\n                            this.state.rating = val;\n                            this.state.timestamp = Date.now();\n                        }}\n                    />\n                </div>\n                <div>\n                    <Button \n                        id=\"Back\"\n                        onClick={() => this.props.history.goBack()}\n                        appearance=\"subtle\"\n                    >\n                            {\"Back\"}\n                    </Button>\n                    <Button \n                        id=\"Next\"\n                        onClick={() => {\n                            if (this.props.location.state.progress==\"q2\"){\n                                this.addResponse();\n                            }\n                            this.props.history.push(\n                                {\n                                    pathname: this.props.location.state.progress == \"q1\" ? \"/video\" : \"/conclusion\",\n                                    state: {\n                                        progress: this.props.location.state.progress == \"q1\" ? \"q2\" : \"done\",\n                                        q1Rating: this.state.rating,\n                                        q1Timestamp: this.state.timestamp,\n                                        sessionID: this.props.location.state.sessionID,\n                                        groupID: this.props.location.state.groupID\n                                    }\n                                }\n                            );\n                        }}\n                        appearance=\"subtle\">\n                        {\"Next\"}\n                    </Button>\n                </div>\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport 'rsuite/dist/styles/rsuite-default.css';\n\nexport default class ConclusionScreen extends React.Component {\n    state = {\n    }\n\n    render() {\n        return (\n            <div id=\"Content\">\n                <p>Thank you for completing this study. :) </p>\n                <br></br>\n                <p>Here is your survey code {this.props.location.state.sessionID}.</p>\n            </div>\n        )\n    }\n}","export default __webpack_public_path__ + \"static/media/gt-seal.0417c1a4.png\";","import '../App.css';\nimport logo from '../imgs/gt-seal.png';\n\nexport const siteTitle = 'Cognitive Science Study'\n\nexport default function Layout({ children }) {\n  return (\n    <div>\n      <header className={\"layout\"}>\n        <img id=\"logo\" src={logo} alt=\"logo\"/>\n        <h1 id=\"header\">\n          {siteTitle}\n        </h1>\n      </header>\n      <main>{children}</main>\n    </div>\n\n  )\n}\n","import React from 'react'\nimport IntroScreen from './pages/intro.js';\nimport VideoScreen from './pages/video.js';\nimport QuestionScreen from './pages/question.js';\nimport ConclusionScreen from './pages/conclusion.js';\nimport Layout from './components/layout.js';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  withRouter\n} from \"react-router-dom\";\nimport './App.css';\nimport './index.css';\nimport { Component } from 'react';\n\nconst RouterSwitch = withRouter(({ location }) => (\n\n  <Switch location={location}>\n    <Route exact path='/' component={IntroScreen}/>\n    <Route path='/video' component={VideoScreen}/>\n    <Route path='/question' component={QuestionScreen}/>\n    <Route path='/conclusion' component={ConclusionScreen}/>\n  </Switch>\n));\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Layout>\n        </Layout>\n        <RouterSwitch/>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}